#!/usr/bin/perl

###########################################################################
#
# Baracus build and boot management framework
#
# Copyright (C) 2010 Novell, Inc, 404 Wyman Street, Waltham, MA 02451, USA.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the Artistic License 2.0, as published
# by the Perl Foundation, or the GNU General Public License 2.0
# as published by the Free Software Foundation; your choice.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Both the Artistic
# Licesnse and the GPL License referenced have clauses with more details.
#
# You should have received a copy of the licenses mentioned
# along with this program; if not, write to:
#
# FSF, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110, USA.
# The Perl Foundation, 6832 Mulderstraat, Grand Ledge, MI 48837, USA.
#
###########################################################################

use lib '/var/spool/baracus/www/modules';
use BATools qw(:standard);
use CGI qw(:standard);

my $rURL = "power";
my $ref = "no";
my $seconds = 3;
my $qStr = "";
my $applet = "";
my $title = "Power Control";
my $autoClose = "onblur='window.close()'";
my $close = "<input style='position:absolute;left:10px;top:100px' type='button' name='close' value='Close' onclick='window.close()'>";
our $refresh = "";


print "Content-type: text/html\n\n";

my $hostname = param('hostname') || "";
my $mac      = param('mac') || "";
my $bmcaddr  = param('bmcaddr') || "";
my $type     = param('type') || "";
my $username = param('username') || "";
my $passwd   = param('passwd') || "";
my $op       = param('submit') || "";

if( $op eq "")
{
	$op = param('submit2');
}

my $content = "$mac $op\n\n";

my $header="Power Control";
my $headError = "<font class='error'>Error</font>";

if( $op eq "On" ) {
    $content = $content . onContent( $mac );
    $header = "Power On";
}
elsif( $op eq "Off" ) {
    $content = $content . offContent( $mac );
    $header = "Power Off";
}
elsif( $op eq "Status" ) {
    $content = $content . statusContent( $mac );
    $header = "Power Status";
}
elsif( $op eq "VNC" ) {
    $header = "Power VNC";
    $applet = vncContent( $hostname );
    $title = $hostname;
    $autoClose = "";
    $close = "";
}
elsif( $op eq "Add" ) {
    if (( $mac eq "" ) || ( $bmcaddr eq "" ) || ( $type eq "" )) {
        $content = $content."Missing required field: $op";
        $header = $headError;
    } else {
        $content .= addContent();
        $header = "Adding Power Entry";
    }
}
else {
    $content = $content."Invalid Operation: $op";
    $header = $headError;
}

if( $ref ne "yes")
{
    $refresh = "";
}

$content = $content."\n\n\n";

print <<HTML0

<html>
	<head>
		<META HTTP-EQUIV="Expires" CONTENT="Tue, 04 Dec 1993 21:29:02 GMT">
		<link rel='stylesheet' href='/$BATools::baRoot/css/common.css' type='text/css' >
		<script type="text/javascript" src="/$BATools::baRoot/script/common.js"></script>
		<title>$title</title>
	</head>
	<div id='output'>
	<body $refresh $autoClose bgcolor='gainsboro'>
	<pre>$content</pre>
	<h1>$header</h1>
	$applet
	$close
	</body>
	</div>
</html>

HTML0
;

########################################################################################################
#  
########################################################################################################

sub addContent() {
    my $cmd = "sudo bapower add --mac $mac --host $hostname --bmcaddr $bmcaddr --ctype $type";
    if ( $username ne "" ) { $cmd .= " --login $username"; }
    if ( $passwd ne "" )   { $cmd .= " --passwd $passwd"; }
    my $r = $cmd . "\n";
    $r .= `$cmd`;
    return $r;
}

sub onContent($)
{
	my $cmd = "sudo bapower on --mac=$_[0]";
	my $r = `$cmd`;
	return $r;
}

sub offContent($)
{
	my $cmd = "sudo bapower off --mac=$_[0]";
	my $r = `$cmd`;
	return $r;
}

sub statusContent($)
{
	my $cmd = "sudo bapower status --mac=$_[0]";
	my $r = `$cmd`;
	return $r;
}

sub vncContent($)
{
	my $host;
	my $port;
	my $cmd = "sudo virsh vncdisplay $_[0]";
	my $vncInfo = `$cmd`; 

	my @tokens = split(/:/,$vncInfo);
	$host = $tokens[0];
	$port = "59" . $tokens[1];

	my $r = "<OBJECT width='700' height='500'>
	 	<PARAM NAME='VNC' VALUE='/baracus/Flashlight.swf?host=$host&port=$port&autoConnect=true'>
	 	<EMBED src='/baracus/Flashlight.swf?host=$host&port=$port&autoConnect=true' type='application/x-shockwave-flash' width='700' height='550'></EMBED>
	 	</OBJECT>\n";

	return $r;
}


;
