#!/usr/bin/perl

###########################################################################
#
# Baracus build and boot management framework
#
# Copyright (C) 2010 Novell, Inc, 404 Wyman Street, Waltham, MA 02451, USA.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the Artistic License 2.0, as published
# by the Perl Foundation, or the GNU General Public License 2.0
# as published by the Free Software Foundation; your choice.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Both the Artistic
# Licesnse and the GPL License referenced have clauses with more details.
#
# You should have received a copy of the licenses mentioned
# along with this program; if not, write to:
#
# FSF, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110, USA.
# The Perl Foundation, 6832 Mulderstraat, Grand Ledge, MI 48837, USA.
#
###########################################################################

use lib '/var/spool/baracus/www/modules';
use BATools qw(:standard);
use CGI qw(:standard);

my $name = param('distro') || "";
my $filter = param('filter') || "";
my $status = param('status') || "all";
my $addon = param('addon') || "";
my $opButtonValue = "";

my $statusSel = getStatus( $name, $addon, $filter, $status);

our $bases = getBases( $name, $addon, $filter, $status);
our $addons = "";
my $addonsTitle = "";
my $baseSelected = 0;
my $addonSelected = 0;
my $curStatus;
my $ipDisplay;
 
if( $bases =~ m/selected/)
{
	$baseSelected = 1;
}

if( $name ne "" && $baseSelected)
{
	$addonsTitle = getAddonsTitle( $name);
	$addons = getAddons( $name, $addon, $filter, $status);
	if( $addons =~ m/selected/)
	{
		$addonSelected = 1;
		$baseSelected = 0;
	}
}

if( $baseSelected)
{
 	$curStatus = BAdb::getDistroStatus( $name); 
}
elsif( $addonSelected)
{
	$curStatus = BAdb::getDistroStatus( $addon); 
}

if( $curStatus eq "removed" or $curStatus eq "none")
{
	$opButtonValue = "Add";
	$ipDisplay = "block";
}
else
{
	$opButtonValue = "Delete";
	$ipDisplay = "none";
}

print "Content-type: text/html\n\n";

print <<HTML0

<html>
	<head>
		<META HTTP-EQUIV="Expires" CONTENT="Tue, 04 Dec 1993 21:29:02 GMT">
		<link rel='stylesheet' href='/$BATools::baRoot/css/host.css' type='text/css' >
		<script type="text/javascript" src="/$BATools::baRoot/script/common.js"></script>
		<style type="text/css">#ip{ position:absolute;left:20px;top:330px;display:$ipDisplay;}</style>
	</head>
	<body onLoad='selectThis(document.form1.host, "$name");document.form1.host.focus()'>
		<form method="GET" name='form1' action="/$BATools::baCGI/sourceHandler">
		<div id='config'>
		<div id='history' style="color:black">Source List</div>
		<div id='textEdit'>
		$statusSel
		<img class='search' src='/$BATools::baRoot/images/searchI.gif' onClick='sourceReload( document.form1.distro.value, \"\", document.form1.filter.value, document.form1.status.value)'/>
		<img class='sweep' src='/$BATools::baRoot/images/sweepI.gif' onClick='document.form1.filter.value="";sourceReload( document.form1.distro.value, \"\", document.form1.filter.value, document.form1.status.value);'/>
		<input type='text' class='filter' name='filter' value='$filter' onKeyPress='return sourceRemoveEnterKey(event)'>
		<input class="submit" name='submit' type='submit' value='$opButtonValue'>
		<font class='name'>Distro Name</font><br>
		$bases
		<br>
		<font class='name2'>$addonsTitle</font><br>
		$addons
		<br>

	<div id='ip'>
		<br>
		<input class="sadd" type="checkbox"  name="iso" value="iso" onClick="enableISO(this)">
		<font class="sadd">Download ISO</font><br>
		<input class="sadd" type="text" name="user" value="username" disabled onFocus="clearText(this)">
		<input class="sadd" type="password" name="pass" value="password" disabled onFocus="clearText(this)">
		<br><br><br>
		<input class="sadd" type="checkbox" name="proxy" value="proxy" onClick="enableProxy(this)">
		<font class="sadd">Use Proxy</font><br>
		<input class="sadd" type="text" name="paddr" value="hostname" disabled onFocus="clearText(this)">
		<input class="sadd" type="text" name="puser" value="username" disabled onFocus="clearText(this)">
		<input class="sadd" type="password" name="ppass" value="password" disabled onFocus="clearText(this)">
	</div>


		</div>
		</div>
		<input type="hidden" name="curDistro" value="$name">
		</form>
	</body>
</html>
HTML0
;

sub getStatus
{
	my $name = shift @_;
	my $addon = shift @_;
	my $filter = shift @_;
	my $status = shift @_;
	
	my $r = "<select class='status' name='status' onChange='sourceReload( \"$name\", \"$addon\", \"$filter\", this.value)'>\n";

	foreach( @BATools::statusList)
	{
		$selected = $_ eq $status ? "selected" : "";
		$r = $r."<option $selected>$_</option>\n";
	}
	$r = $r."</select>\n";
	return $r;
}

sub getBases
{
	my $name = shift @_;
	my $addon = shift @_;
	my $filter = shift @_;
	my $status = shift @_;
	my @oneArray;
	my $n;
	my $v;
	my $spaces = "";
	my $sCount;
	my $r = "";
	my $selected;
	$r = $r."<select class='nameWide' name='distro' size='10' onClick='sourceReload( this.value, \"\", \"$filter\", \"$status\")'>";
	
	my @items = BATools::getDistros( $filter, $status, "base");
	foreach( @items)
	{
		@oneArray = split( " ", $_);
		$n = BATools::trim(@oneArray[0]);
		$v = BATools::trim(@oneArray[1]);
		
		for($sCount = (55 - (length $n)); $sCount > 0; -- $sCount)
		{
			$spaces = $spaces."&nbsp;";
		}		
		
		if( $n eq $name)
		{
			$selected = "selected";
		}
		else
		{
			$selected = "";
		}
		$r = $r."<option value='$n' $selected>$n $spaces $v</option>\n";	
		$spaces = "";
	}
	
	$r = $r."</select>";
	
	return $r;	
}

sub getAddonsTitle
{
	my $name = shift @_;
	return "Addons for $name";
}

sub getAddons
{
	my $name = shift @_;
	my $addon = shift @_;
	my $filter = shift @_;
	my $status = shift @_;

	my @oneArray;
	my $n;
	my $v;
	my $spaces = "";
	my $sCount;
	my $r = "";
	my $selected;
	$r = $r."<select class='nameWide2' name='addon' size='4' onClick='sourceReload( \"$name\", document.form1.addon.value, \"$filter\", \"$status\")'>";
	
	my @items = BAdb::getAddonsForDistro( $name, "", "");
	foreach( @items)
	{
		@oneArray = split( " ", $_);
		$n = BATools::trim(@oneArray[0]);
		$v = BATools::trim(@oneArray[1]);
		
		for($sCount = (55 - (length $n)); $sCount > 0; -- $sCount)
		{
			$spaces = $spaces."&nbsp;";
		}		
		
		if( $n eq $addon)
		{
			$selected = "selected";
			$bases =~ s/selected//;
		}
		else
		{
			$selected = "";
		}
		$r = $r."<option value='$n' $selected>$n $spaces $v</option>\n";	
		$spaces = "";
	}
	
	$r = $r."</select>";
	
	return $r;	

}
