#!/usr/bin/perl

use lib '/var/spool/baracus/www/modules';
use BATools qw(:standard);
use CGI qw(:standard);

our $rURL = "host";
our $ref = "yes";
our $seconds = 3;
our $qStr = "";

my $refresh = "";


print "Content-type: text/html\n\n";

my $sub = param('sub');	# subfunction
my $mac = param('mac') || "";	# subfunction
my $host = param('host') || "";	# subfunction
my $content = "";

my $headError = "<font class='error'>Error</font>";

if( $sub eq "del")
{
	$content = $content.delContent( param('host'));
	$header = delHeader();
}
elsif( $sub eq "addHost")
{
	$content = $content.AddHostContent( $mac, $host );
        $header = AddHostHeader();
}
elsif( $sub eq "sta")
{
	$content = $content.staContent( param('host'), param('submit'));
	$header = staHeader();
}
else
{
	$content = $content."Invalid Subfunction: $sub";
	$header = $headError;
}

if( $ref eq "yes")
{
	$refresh = "onLoad=\"doLoad( '$rURL', '$qStr', $seconds)\"";
}

$content = $content."\n\n\n";

print <<HTML0

<html>
	<head>
		<META HTTP-EQUIV="Expires" CONTENT="Tue, 04 Dec 1993 21:29:02 GMT">
		<link rel='stylesheet' href='/$BATools::baRoot/css/common.css' type='text/css' >
		<script type="text/javascript" src="/$BATools::baRoot/script/common.js"></script>
	</head>
	<div id='output'>
	<body background="/baracus/images/bg-grad.jpg" $refresh>
	<pre>$content</pre>
	<h1>$header</h1>
	<h3>$proc</h3>
	<body>
	</div>
</html>

HTML0

;
########################################################################################################
#  Subfunction = del (Delete Install Source)
########################################################################################################

sub delHeader()
{
	return "Delete Host Template";
}

sub delContent($)
{
	my $selection = shift;
	my $host = (split(/ /, $selection))[0];
	$rURL = $rURL."Remove";
	my $cmd = "sudo bahost remove --mac=$host";
	my $r = `$cmd`;
	return $r;
}

sub AddHostHeader()
{
        return "Adding Host";
}

sub AddHostContent($$)
{
    my $mac = shift;
    my $host = shift;
        $rURL = $rURL."Add";
        my $cmd = "sudo bahost add --mac $mac";
    if ( $host ne "" ) {
        $cmd .= " --hostname $host";
    }

        my $r = `$cmd`;
        return $r;
}

sub staHeader()
{
	return "Host Status Change";
}

sub staContent($$)
{
	my $host = $_[0];
	my $operation = $_[1];
	$rURL = $rURL."Status";
	$qStr = "?host=$host&filter=".param('filter');
	my $cmd = "sudo bahost $operation --hostname $host";
	my $r = `$cmd`;
	return $r;
}
