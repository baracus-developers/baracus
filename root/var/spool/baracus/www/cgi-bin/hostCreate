
#!/usr/bin/perl

use lib '/var/spool/baracus/www/modules';
use BATools qw(:standard);
use CGI qw(:standard);

print "Content-type: text/html\n\n";


our $hostname = param('hostname');
our $mac = param('mac');
our $ip = param('ip');

our $netmask = param('netmask') || "netmask";
our $netmaskD;
our $gateway = param('gateway') || "gateway";
our $gatewayD;
our $dnsdomain = param('dnsdomain') || "dnsdomain";
our $dnsdomainD;
our $dns1 = param('dns1') || "dns1";
our $dns1D;
our $distro = param('distro') || "distro";
our $distroD;
our $hardware = param('hardware') || "hardware";
our $hardwareD;
our $module = param('module') || "module";
our $moduleD;
our $gateway;
our $gatewayD;
our @errors = ();
our $profilePath = $BATools::profilePath;
our $prof = param('prof') || 'default';
our $createContent;
our $status = "status";
our $moduleList = "";
our $distroList = "";
our $hardwareList = "";
our $found;
our @profModules = ();

our @profileOptions = (	$netmask,
						$gateway,
						$dnsdomain,
						$dns1,
						$distro,
						$hardware,
						$module);
				  		

########################################################################################################
#  Setup Data
########################################################################################################

our $profiles = generateProfiles();

chomp($distro);

initProfileOptions();
createProfileVars();

$distroList = BATools::getDistroSelectionList( $distro, $distroD, "onClick='distUpdate()'");
$hardwareList = BATools::getHardwareSelectionList( $hardware, $hardwareD, "onClick='hwUpdate()'");

getAndCheckModules();
$createContent = infoWindow();

########################################################################################################
#  Print HTML 
########################################################################################################

print <<HTML0;

<html>
	<head>
		<META HTTP-EQUIV="Expires" CONTENT="Tue, 04 Dec 1993 21:29:02 GMT">
		<link rel='stylesheet' href='/$BATools::baRoot/css/common.css' type='text/css' >
		<link rel='stylesheet' href='/$BATools::baRoot/css/forms.css' type='text/css' >
		<script type="text/javascript" src="/$BATools::baRoot/script/common.js"></script>
	</head>
	<body background="/baracus/images/bg06.jpg">

	<div id='f-labels'>
	<form method="post" name="createAdd" action="/$BATools::baCGI/createHandler">
	<div id='block1'>
	<h1>Hostname:</h1><br><input class="text" type="text" size="25" maxlength="15" name="hostname" value="$hostname" $dhost>
	<br><br>
	<h1>MAC Address:</h1><br><input class="text" type="text" size="25" name="mac" value="$mac" $macD onkeypress="return mac_only(event)">
	</div>

	<div id='blockb'>
	<h1>IP Address:</h1><br><input class="text" type="text" size="25" name="ip" value="$ip" $ipD>
	<br><br>
	<h1>Profile:</h1><br>
	
	<!--
	<select name='profile' onChange='location.href=(this.options[this.selectedIndex].value)'>
	-->
	<select name='profile' onChange='profileChange()'>
	
	$profiles
	</select><br><br>
	</div>

	<div id='blockc'>
	<h1 class="$netmaskD">Subnet Mask:</h1><br><input class="text" type="text" size="25" name="netmask" value="$netmask" $netmaskD>
	<br><br>
	<h1 class="$gatewayD">Gateway:</h1><br><input class="text" type="text" size="25" name="gateway" value="$gateway" $gatewayD>
	<br><br>
	</div>

	<div id='blockd'>
	<h1 class="$dnsdomainD">DNS Domain:</h1><br><input class="text" type="text" size="25" name="dnsdomain" value="$dnsdomain" $dnsdomainD>
	<br><br>
	<h1 class="$dns1D">DNS Server Address:</h1><br><input class="text" type="text" size="25" name="dns1" value="$dns1" $dns1D>
	<br><br>
	</div>
	
	<div id='block3'>
	<h1 class="$distroD">Distribution:</h1><br>
	$distroList
	<br><h1 class="$hardwareD">Hardware Type:</h1><br>
	$hardwareList
	<br>
	<h1 class="$moduleD">Modules:</h1><h4>(hold ctrl for multiple)</h4>
	<br>
	<select name='module' multiple size='4' $moduleD onClick='modUpdate()'>$moduleList</select>
	</div>
	
	<div id='block4'>
	<input type="submit" value="Create" width="300">
	<input class="clear" type="button" value="Clear" onClick="location.href='/baracus/ba/hostCreate'">
	</div>

	<div id='$status'>
	$createContent
	</div>
	
	</form>
	</div>
</body>
</html>
HTML0

########################################################################################################
#  Profile - Distribution - Hardware list generation functions
########################################################################################################

sub initProfileOptions()
{
	foreach( @profileOptions)
	{
		#$$_ = "";
		$tmp = $_."D";
		$$tmp = "";
	}
}

sub createProfileVars
{
	my $name;
	my $val;
	
  	open (PROFILE, $profilePath.$prof) || die "couldn't open the file!: $!\n $profilePath$prof";
   	while ($record = <PROFILE>)
   	{
    	foreach (@profileOptions)
		{
	    	if( $record =~ m/^$_/)
    		{
    			@pair = split( "=", $record, 2);
    			
    			$name = @pair[0];
    			$val = @pair[1];
    			
    			$$_ = $val;
				
				debugPrint("$_=$val");		

				$slen = length $val;
				
				if ($slen > 1)
				{
					$tmp = $_."D";
					$$tmp = "disabled";
					
					debugPrint("$tmp $$tmp");		
					
					if( $_ eq "module")
					{
						push( @profModules, $val);
					}
				}
	    	}
	    }
   	}
	close(PROFILE);
}

sub generateProfiles
{
	my $retString = "";
	my $isSelected;
	
	opendir(DIR, $profilePath) || die "can't opendir $profilePath: $!";
	 
	@dots = readdir(DIR);
	 
	foreach (@dots)
	{
	
		# If file is not ., .., and does not end with ~
		if( $_ ne "." && $_ ne ".." && $_ !~ m/~\Z/)
		{
			if( $_ eq $prof)
			{
				$isSelected = "selected";
			}
			else
			{
				$isSelected = "";
			}	
			$retString = $retString."\t<option " . $isSelected . " value='" . $_ . "' >" . $_ . "</option>\n";
		}
	}	
	
	closedir DIR;
	return $retString;
}

sub getAndCheckModules
{
	if( $moduleD eq "disabled")
	{
		if( scalar(@profModules))
		{
			foreach $pMod( @profModules)
			{
				$found = 0;
				foreach $fMod( BATools::getModuleList())
				{
						chomp($fMod);
						chomp( $pMod);
						if( $pMod eq $fMod)
						{
							$moduleList = $moduleList."<option>$pMod</option>\n";
							$found = 1;
						}
				}
				if( !$found)
				{
					# $moduleList = $moduleList."<option class='bad'>ERROR: $pMod</option>\n";
					debugPrint( "Module \"$pMod\" in \"$prof\" NOT found\n(non critical).\n");
				}
			}
			if( !$found)
			{
				$moduleD = "enabled";
				getAndCheckModules();
			}
		}
		else
		{
			$moduleList = "<option>See Profile: $prof</option>";
		}
	}
	else
	{
		$moduleList = BATools::getModuleSelectionList();
	}
}

sub infoWindow
{
	my $cc = "";
	my $ccurl = "/$BATools::baCGI/createContent?caller=create&attr=prof&val=$prof";
	
	if( !scalar( @errors))
	{
		$cc = "<iframe src=\"$ccurl\" scrolling='no' height='100%' width='100%' frameborder='0' id='infoBox' ></iframe>";
	}
	else
	{
		$status = "error";
		$cc = "<textarea name='comments' class='tbox' readonly='yes'>\n";
		foreach $err( @errors)
		{
			$cc = $cc.$err."\n";
		}
		$cc = $cc."</textarea>";
	}
	return $cc;
}

sub debugPrint
{
	if( $BATools::debug)
	{
		push( @errors, $_[0]);
	}
}
