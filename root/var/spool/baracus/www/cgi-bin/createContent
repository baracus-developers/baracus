#!/usr/bin/perl

use strict;
use lib '/var/spool/baracus/www/modules';
use BATools qw(:standard);
use vars qw( %hash @array);
use CGI qw(:standard);

my $caller = param('caller');
my $attr = param('attr');
my @val = param('val');
my $ver = param('ver') || -1;
my $tall = param('t') || "";
my $sDiv = "inStatus";

if( $tall eq "yes")
{
	$sDiv = "inStatusTall";
}
	

my $content = getContent( $ver, $attr, @val);
my $aContent = "";

print "Content-type: text/html\n\n";

print <<HTML0;

<html>
	<head>
		<META HTTP-EQUIV="Expires" CONTENT="Tue, 04 Dec 1993 21:29:02 GMT">
		<link rel='stylesheet' href='/$BATools::baRoot/css/common.css' type='text/css' >
		<script type="text/javascript" src="/$BATools::baRoot/script/common.js"></script>
	</head>
	<body>
	<div id='$sDiv'>
	<textarea name="comments" readonly="yes">$content</textarea>
	</div>
	</body>
</html>

HTML0
;

sub getContent
{
	my($ver, $a, @v) = @_;
	my $v = @v[0];
	my $r = "";
	my $cmd = "";
	
	if( $a eq "profile")
	{
		$r = "\n\n";
		$r = $r.BAdb::getProfile( $v, $ver, "yes");
	}
	elsif( $a eq "hardware")
	{
		$cmd = "sudo baconfig detail hardware $v";
		$r = "Hardware Detail\n\n";
		$r = $r.`$cmd`;
	}
	elsif( $a eq "distro")
	{
		$cmd = "sudo basource detail --distro $v";
		$r = "Distribution Detail\n\n";
		$r = $r.`$cmd`;
	}
	elsif( $a eq "module")
	{
		foreach (@v)
		{
			$cmd = "sudo baconfig detail module $_";
			$r = $r."Module Detail: $_\n\n";
			$r = $r.`$cmd`."\n\n";
		}
	}
	elsif( $a eq "template")
	{
		$cmd = "sudo bahost list templates --host $v --verbose";
		$r = "Host $v Detail\n\n";
		$r = $r.`$cmd`."\n\n";
	}
	elsif( $a eq "addon")
	{
		foreach (@v)
		{
			$cmd = "sudo basource detail --distro $_";
			$r = $r."Addon Detail: $_\n\n";
			$r = $r.`$cmd`."\n\n";
		}
	}
	elsif( $a eq "storage")
	{
        my ( undef, $id ) = split( '\s', $v );
		$cmd = "sudo bastorage detail --id $id";
		$r .= "Storage Detail\n\n";
		$r = $r.`$cmd`."\n\n";
	}
	else
	{
		$r = "\n\nInvalid Attribute";
	}
	return $r;
}

